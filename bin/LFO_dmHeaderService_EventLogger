#!/usr/bin/env python

import time
import logging
import SALPY_atHeaderService
import HeaderService.hutils as hutils

LOGGER = hutils.create_logger(level=logging.NOTSET, name='HEADERSERVICE')

if __name__ == "__main__":
    mgr = SALPY_atHeaderService.SAL_atHeaderService()
    mgr.salEvent("atHeaderService_logevent_largeFileObjectAvailable")
    LOGGER.info("atHeaderService_largeFileObjectAvailable logger ready")
    event = SALPY_atHeaderService.atHeaderService_logevent_largeFileObjectAvailableC()
    while True:
        retval = mgr.getEvent_largeFileObjectAvailable(event)
        if retval == 0:
            LOGGER.info("-------------------------------------------------------")
            LOGGER.info("Event atHeaderService LargeFileObjectAvailable received")
            LOGGER.info("Byte_Size: %s" % event.byteSize)
            LOGGER.info("Checksum: %s" % event.checkSum)
            LOGGER.info("Generator: %s" % event.generator)
            LOGGER.info("Mime: %s" % event.mimeType)
            LOGGER.info("URL: %s" % event.url)
            LOGGER.info("ID: %s" % event.id)
            LOGGER.info("Version: %s" % event.version)
            LOGGER.info("priority: %s" % event.priority)
            retval == -1
        time.sleep(1)
    mgr.salShutdown()
    exit()
