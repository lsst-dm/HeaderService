#!/usr/bin/env python

import fitsio
import numpy
import os
import sys

def compare2fits(file1,file2,write=False):

    # Make sure the exists
    exists1 = os.path.exists(file1)
    exists2 = os.path.exists(file2)

    if not exists1 or not exists2:
        print ("# WARNING: Files do not exists:")
        if not exists1: print ("# {0:s}: {1:s}".format(file1,exists1))
        if not exists2: print ("# {0:s}: {1:s}".format(file2,exists2))
        return

    # Make sure that have the same number of hdus
    fits1 = fitsio.FITS(file1) 
    hdus1 = xrange(len(fits1))
    fits2 = fitsio.FITS(file2) 
    hdus2 = xrange(len(fits2))
    
    for hdu in hdus1:
        data1,header1 = fitsio.read(file1,ext=hdu,header=True)
        data2,header2 = fitsio.read(file2,ext=hdu,header=True)
        # We skip the first HDU=0
        if hdu == 0:
            continue
        diff = data1-data2
        Npix = diff.shape[0]*diff.shape[1]
        ix = numpy.where(diff != 0)
        Ndiff = len(ix[0])
        if Ndiff > 0:
            fraction = float(Ndiff)/float(Npix)
            v1    = diff[ix].min()
            v2    = diff[ix].max()
            vmean = diff[ix].mean()
            vmedian = numpy.median(diff[ix])
            print ("# FILES ARE DIFERENT for HDU {} at {} pixels or {} perc".format(hdu,Ndiff,100*fraction))
            print ("# {},{},{},{} (min,max,mean,median)".format(v1,v2,vmean,vmedian))
        else:
            print ("{} HDU {} -- {}".format(file1, hdu,Ndiff))

        if write:
            base,ext = os.path.splitext(os.path.basename(file1))
            outname = "%s_diff%s" % (base,ext)
            print ("# Will write file: {0:s}".format(outname))
            fitsio.write(outname,diff,header=header1,clobber=True)


if __name__ == "__main__":

    try:
        file1 = sys.argv[1]
        file2 = sys.argv[2]
    except:
        sys.exit("ERROR: Need two files to compare")

    compare2fits(file1,file2,write=False)


            
