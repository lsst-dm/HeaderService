# Configuration file for Generic Camera

# The name of the HeaderService
hs_name: GCHeaderService
hs_index: 103
instrument: GenericCamera
# Vendor names come from an GenericCamera Event, this is in case it does not
vendor_names: ['DUMMY']
section: GenericCamera-${hs_index}
segname: IMAGE

# Default logging level
loglevel: 'INFO'

# Path to the log location and other log definitions
logfile: 'www/GCHeaderService-${hs_index}.log'
log_format: '[%(asctime)s.%(msecs)03d][%(levelname)s][%(name)s][%(funcName)s] %(message)s'
log_format_date: '%Y-%m-%d %H:%M:%S'

# path to the web server logfile
weblogfile: 'www/webserver.log'

# port_number for webserver
port_number: 8000

# The URL format to be used for lfa_mode=http
url_format: "http://{ip_address}:{port_number}/{filename_HDR}"

# While we support both s3 and http LFA we need to define the mode [s3 or http]
lfa_mode: http

# The s3 instance (i.e.: nts, tuc, ls, cp)
# s3instance: nts

# Default write_mode (fits or string)
write_mode: yaml

# The event to get the timeout
timeout_event:
    device: GenericCamera
    topic: startIntegration
    value: timeout
    device_index: ${hs_index}

# Timeout beyond the requested exposure time to wait for an end of Telemetry event (in seconds)
timeout_exptime: 30
# In case we don't read this from Camera
timeout_keyword: 'EXPTIME'

# The file naming event source and definitions
filepath: 'www/DMHS_filerepo'
format_HDR: "{}.yaml"
format_FITS: "{}.fits"
imageName_event:
    device: GenericCamera
    topic: startIntegration
    value: imageName
    device_index: ${hs_index}

# The Events that we use to define where we collect
start_collection_event:
    device: GenericCamera
    topic: startIntegration
    device_index: ${hs_index}

end_collection_event:
    device: GenericCamera
    topic: startReadout
    device_index: ${hs_index}

# The event for the image readout paramters
imageParam_event: False

# Telemetry values for images meta-data
# https://confluence.lsstcorp.org/pages/viewpage.action?spaceKey=LSSTCOM&title=Simulation+Camera+Header+Information+Topic+Mapping
telemetry:

# --- Date, night and basic information

 DATE-OBS:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: timestampAcquisitionStart
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 DATE-BEG:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: timestampAcquisitionStart
  device_index: ${hs_index}
  collect_after_event: end_collection_event

 DATE-END:
  device: GenericCamera
  Stype: Event
  topic: startReadout
  value: timestampStartOfReadout
  device_index: ${hs_index}
  collect_after_event: end_collection_event

 OBSID:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: imageName
  device_index: ${hs_index}
  collect_after_event: start_collection_event

# -- Pointing Information

 RA:
  device: MTPtg
  Stype: Event
  topic: currentTarget
  value: ra
  collect_after_event: start_collection_event
  scale: 57.29577951308232

 DEC:
  device: MTPtg
  Stype: Event
  topic: currentTarget
  value: declination
  collect_after_event: start_collection_event
  scale: 57.29577951308232

 RASTART:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: ra
  collect_after_event: start_collection_event

 DECSTART:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: declination
  collect_after_event: start_collection_event

 HASTART:
  device: MTPtg
  Stype: Telemetry
  topic: currentTargetStatus
  value: ha
  collect_after_event: start_collection_event

 AMSTART:
  device: MTPtg
  Stype: Telemetry
  topic: currentTargetStatus
  value: airmass
  collect_after_event: start_collection_event

 ELSTART:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: elevationActualPosition
  collect_after_event: start_collection_event

 AZSTART:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: azimuthActualPosition
  collect_after_event: start_collection_event

 RAEND:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: ra
  collect_after_event: end_collection_event

 DECEND:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: declination
  collect_after_event: end_collection_event

 HAEND:
  device: MTPtg
  Stype: Telemetry
  topic: currentTargetStatus
  value: ha
  collect_after_event: end_collection_event

 AMEND:
  device: MTPtg
  Stype: Telemetry
  topic: currentTargetStatus
  value: airmass
  collect_after_event: end_collection_event

 ELEND:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: elevationActualPosition
  collect_after_event: end_collection_event

 AZEND:
  device: MTPtg
  Stype: Telemetry
  topic: mountPosition
  value: azimuthActualPosition
  collect_after_event: end_collection_event

 FOCUSZ:
  device: MTHexapod
  device_index: 1
  Stype: Telemetry
  topic: application
  value: demand
  collect_after_event: start_collection_event
  array_index: 2
  array: indexed_array

 TRACKSYS:
  device: MTPtg
  Stype: Event
  topic: currentTarget
  value: targetType
  collect_after_event: start_collection_event
  array: enum
  array_name: TargetTypes

 RADESYS:
  device: MTPtg
  Stype: Event
  topic: currentTarget
  value: frame
  collect_after_event: start_collection_event
  array: enum
  array_name: CoordFrame

# -- Image Identifying Information

 CAMCODE:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: imageSource
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 CONTRLLR:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: imageController
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 DAYOBS:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: imageDate
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 SEQNUM:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: imageNumber
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 GROUPID:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: additionalValues
  device_index: ${hs_index}
  collect_after_event: start_collection_event
  array_keys: additionalKeys
  array_keyname: groupId
  array: keyed_array

 IMGTYPE:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: additionalValues
  device_index: ${hs_index}
  collect_after_event: start_collection_event
  array_keys: additionalKeys
  array_keyname: imageType
  array: keyed_array

# -- Additional Keywords from Camera

 REASON:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: additionalValues
  device_index: ${hs_index}
  collect_after_event: start_collection_event
  array_keys: additionalKeys
  array_keyname: reason
  array: keyed_array

 PROGRAM:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: additionalValues
  device_index: ${hs_index}
  collect_after_event: start_collection_event
  array_keys: additionalKeys
  array_keyname: program
  array: keyed_array

# -- Image Sequence Numbers

 CURINDEX:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: imageIndex
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 MAXINDEX:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: imagesInSequence
  device_index: ${hs_index}
  collect_after_event: start_collection_event

# -- Camera Information

 CAMMM:
  device: GenericCamera
  Stype: Event
  topic: cameraInfo
  value: cameraMakeAndModel
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 APERTURE:
  device: GenericCamera
  Stype: Event
  topic: cameraInfo
  value: lensAperture
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 DIAMETER:
  device: GenericCamera
  Stype: Event
  topic: cameraInfo
  value: lensDiameter
  device_index: ${hs_index}
  collect_after_event: start_collection_event

 FOCALLEN:
  device: GenericCamera
  Stype: Event
  topic: cameraInfo
  value: lensFocalLength
  device_index: ${hs_index}
  collect_after_event: start_collection_event

# -- Camera Geometry

 SECPIX:
  device: GenericCamera
  Stype: Event
  topic: cameraInfo
  value: plateScale
  device_index: ${hs_index}
  collect_after_event: start_collection_event

# -- Exposure Information

 EXPTIME:
  device: GenericCamera
  Stype: Event
  topic: startIntegration
  value: exposureTime
  device_index: ${hs_index}
  collect_after_event: start_collection_event

# ---- Weather information -----------------------------
 AIRTEMP:
  device: ESS
  device_index: 301
  Stype: Telemetry
  topic: temperature
  value: temperatureItem
  collect_after_event: start_collection_event
  array_index: 0
  array: indexed_array

 PRESSURE:
  device: ESS
  device_index: 301
  Stype: Telemetry
  topic: pressure
  value: pressureItem
  collect_after_event: start_collection_event
  array_index: 0
  array: indexed_array

 HUMIDITY:
  device: ESS
  device_index: 301
  Stype: Telemetry
  topic: relativeHumidity
  value: relativeHumidityItem
  collect_after_event: start_collection_event

 WINDSPD:
  device: ESS
  device_index: 301
  Stype: Telemetry
  topic: airFlow
  value: speed
  collect_after_event: start_collection_event

 WINDDIR:
  device: ESS
  device_index: 301
  Stype: Telemetry
  topic: airFlow
  value: direction
  collect_after_event: start_collection_event

 SEEING:
  device: DIMM
  device_index: 1
  Stype: Event
  topic: dimmMeasurement
  value: fwhm
  collect_after_event: start_collection_event

# ------- Hierarch keywords --------

 HIERARCH SIMULATE MTMOUNT:
   device: MTMount
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event

 HIERARCH SIMULATE MTM1M3:
   device: MTM1M3
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event

 HIERARCH SIMULATE MTM2:
   device: MTM2
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event

 HIERARCH SIMULATE CAMHEXAPOD:
   device: MTHexapod
   device_index: 1
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event

 HIERARCH SIMULATE M2HEXAPOD:
   device: MTHexapod
   device_index: 2
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event

 HIERARCH SIMULATE MTROTATOR:
   device: MTRotator
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event

 HIERARCH SIMULATE MTDOME:
   device: MTDome
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event

 HIERARCH SIMULATE MTDOMETRAJECTORY:
   device: MTDomeTrajectory
   Stype: Event
   topic: simulationMode
   value: mode
   collect_after_event: start_collection_event
